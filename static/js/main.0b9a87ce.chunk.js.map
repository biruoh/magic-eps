{"version":3,"sources":["close-btn.svg","Header.js","Popup.js","Footer.js","Tab.js","Tabs.js","AddMetaIpad.js","AddMetaDesktop.js","App.js","serviceWorker.js","index.js","upload-file.png"],"names":["module","exports","Header","className","href","target","rel","Popup","this","props","text","onClick","closePopup","src","alt","Component","Footer","state","showPopup","setState","id","togglePopup","bind","Tab","label","activeTab","Tabs","onClickTabItem","tab","children","map","child","key","AddMetaIpad","showFile","event","previewFile","document","getElementById","file","files","filename","name","reader","FileReader","scope","onload","e","source","result","innerHTML","console","log","readAsText","title","description","keyword","handleChange","handleSubmit","value","data","preventDefault","split","length","Map","Object","entries","lines","firstStr","line","join","keywordList","lasttStr","slice","element","createElement","metadata","Blob","type","URL","createObjectURL","download","body","appendChild","click","onSubmit","autoComplete","uploadFile","required","accept","onChange","maxLength","placeholder","AddMetaDesktop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0b9a87ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close-btn.891cf985.svg\";","import React from \"react\";\n\nexport default function Header() {\n  return (\n    <div className=\"Header\">\n      <h1>MAGIC EPS<span><a href=\"https://www.facebook.com/biruoh/\" target=\"_blank\" rel=\"noopener noreferrer\">by Biruoh</a></span></h1>\n      <h2>Start adding EPS metadata to see some magic happen!</h2>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport closePopup from \"./close-btn.svg\";\n\nclass Popup extends Component {\n  render() {\n    return (\n      <div className=\"popup\">\n        <div className=\"popup_inner\">\n          <div className=\"popup-header\">{this.props.text}</div>\n          <p className=\"creator\"><a href=\"https://therisaz.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Phatthranit Osman (Creator)</a></p>\n          <p className=\"contributor\">\n          Supakit Poroon<br />\n          Phubet Rattanachotiwan<br />\n          Siriwong Na Ayutthaya Prontiwa<br />\n          Ploen kongsuwan<br />\n          Yanin Buasook<br />\n          Sarocha Siripan Boonsen<br />\n          ‪Sureerat Srinilrat‬<br />\n          ‪Phanida Thanya‬<br />\n          ‪Phakorn Kasikij‬<br />\n          Na O Teerawat<br />\n          Chonlada Manum<br />\n          Orantanaporn T.<br />\n          ‪Nantawan Dokmai‬<br />\n          Meaw Rujipat<br />\n          Todsaporn Sudon<br />\n          RiRi FaRi<br />\n          Thantharee Netipreechapat<br />\n          Mithita Malai<br />\n          Chamaiporn Ratchatanon<br />\n          ‪Rattanaporn Yamkerd‬<br />\n          Phruetthiphong Thongmanasathian<br />\n          Atom Lapkajornkij\n          </p>\n          <button className=\"close-btn\" onClick={this.props.closePopup}><img className=\"uploadImg\" src={closePopup} alt=\"Close\" /></button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Popup;\n","import React, { Component } from \"react\";\nimport Popup from './Popup';\n\nclass Footer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showPopup: false };\n  }\n\n  togglePopup() {\n     this.setState({\n       showPopup: !this.state.showPopup\n     });\n  }\n\n  render () {\n    return (\n      <div className=\"Footer\">\n        <div id=\"copyright\">Copyright © 2020 Biruoh. All rights reserved. | </div>\n        <button className=\"contributors\" onClick={this.togglePopup.bind(this)}>Contributors</button>\n           {this.state.showPopup ?\n             <Popup\n              text='Contributors'\n              closePopup={this.togglePopup.bind(this)}\n             />\n             : null\n           }\n      </div>\n    );\n  }\n}\nexport default Footer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const {\n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from \"react\";\nimport TextareaAutosize from 'react-autosize-textarea';\nimport uploadFile from \"./upload-file.png\";\n\nclass AddMetaIpad extends Component {\n  constructor() {\n    super();\n    this.state = {\n      file: \"\",\n      text: \"\",\n      title: \"\",\n      description: \"\",\n      keyword: \"\"\n    };\n    this.showFile = this.showFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  showFile = function(event) {\n    const previewFile = document.getElementById(\"fileName\");\n    const file = event.target.files[0];\n    const filename = event.target.files[0].name;\n    const reader = new FileReader();\n    const scope = this;\n    reader.onload = function(e) {\n      const source = reader.result;\n      scope.setState({ text: source, file: filename });\n      previewFile.innerHTML = filename;\n\n      console.log(\"EPS file is ready >>>\");\n      console.log(\"File name: \" + filename);\n    };\n    reader.readAsText(file);\n  };\n\n  handleChange(event) {\n    return function(e) {\n      const state = {};\n      state[event] = e.target.value;\n      this.setState(state);\n    }.bind(this);\n  }\n\n  handleSubmit(event) {\n    const data = {\n      file: this.state.file,\n      text: this.state.text,\n      title: this.state.title,\n      description: this.state.description,\n      keyword: this.state.keyword\n    };\n\n    console.log(\n      \"Title: \" +\n        data.title +\n        \"\\nDescription: \" +\n        data.description +\n        \"\\nKeyword: \" +\n        data.keyword\n    );\n\n    event.preventDefault();\n\n    console.log(\n      data.keyword.split(/\\s*(?:,|$)\\s*\\s+/g).length,\n      new Map(Object.entries(data.keyword.split(/\\s*(?:,|$)\\s*\\s+/g)))\n    );\n\n    const lines = data.text.split(/\\n/);\n    console.log(lines.length);\n\n    const firstStr = data.text\n      .split(/\\n/, 48)\n      .map(function(line) {\n        return line + \"\\n\";\n      })\n      .join(\"\");\n\n    const keywordList = data.keyword\n      .split(/\\s*(?:,|$)\\s*\\s+/g)\n      .map(function(key) {\n        return \"\\n\\t\\t\\t<rdf:li>\" + key + \"</rdf:li>\";\n      })\n      .join(\"\");\n\n    const lasttStr = data.text\n      .split(/\\n/)\n      .slice(49)\n      .map(function(line) {\n        return line + \"\\n\";\n      })\n      .join(\"\");\n\n    const element = document.createElement(\"a\");\n    const metadata = new Blob(\n      [\n        firstStr +\n          \"\\n\\t<dc:format>application/postscript</dc:format>\" +\n          \"\\n\\t<dc:title>\" +\n          \"\\n\\t\\t<rdf:Alt>\" +\n          '\\n\\t\\t\\t<rdf:li xml:lang=\"x-default\">' +\n          data.title +\n          \"</rdf:li>\" +\n          \"\\n\\t\\t</rdf:Alt>\" +\n          \"\\n\\t</dc:title>\" +\n          \"\\n\\t<dc:description>\" +\n          \"\\n\\t\\t<rdf:Alt>\" +\n          '\\n\\t\\t\\t<rdf:li xml:lang=\"x-default\">' +\n          data.description +\n          \"</rdf:li>\" +\n          \"\\n\\t\\t</rdf:Alt>\" +\n          \"\\n\\t</dc:description>\" +\n          \"\\n\\t<dc:subject>\" +\n          \"\\n\\t\\t<rdf:Bag>\" +\n          keywordList +\n          \"\\n\\t\\t</rdf:Bag>\" +\n          \"\\n\\t</dc:subject>\\n\\n\" +\n          lasttStr\n      ],\n      {\n        type: \"text/eps\"\n      }\n    );\n    element.href = URL.createObjectURL(metadata);\n    element.download = \"Magic-EPS-\" + data.file;\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n          <label className=\"uploadFile\">\n            <img className=\"uploadImg\" src={uploadFile} alt=\"Upload File\" />\n            <div id=\"fileName\">Choose an EPS File</div>\n            <input\n              required\n              type=\"file\"\n              accept=\".eps\"\n              onChange={this.showFile}\n            />\n            <div\n              name=\"text\"\n              id=\"metaFile\"\n              value={this.state.text}\n              onChange={this.handleChange(\"text\")}\n            />\n          </label>\n          <label>\n            <TextareaAutosize\n              required\n              maxLength={200}\n              name=\"title\"\n              id=\"metaTitle\"\n              placeholder={\"Title\"}\n              value={this.state.title}\n              onChange={this.handleChange(\"title\")}\n            />\n            <div id=\"charLenght\">{this.state.title.length}/200</div>\n          </label>\n          <label>\n            <TextareaAutosize\n              required\n              maxLength={200}\n              name=\"description\"\n              id=\"metaDescription\"\n              placeholder={\"Description\"}\n              value={this.state.description}\n              onChange={this.handleChange(\"description\")}\n            />\n            <div id=\"charLenght\">{this.state.description.length}/200</div>\n          </label>\n          <label>\n            <TextareaAutosize\n              required\n              name=\"keyword\"\n              id=\"metaKeyword\"\n              placeholder={\"Enter your keywords here...\"}\n              value={this.state.keyword}\n              onChange={this.handleChange(\"keyword\")}\n            />\n            <div id=\"charLenght\">{this.state.keyword ? this.state.keyword.split(/\\s*(?:,|$)\\s*\\s+/g).length : 0}/50</div>\n          </label>\n          <input type=\"submit\" id=\"addMeta\" value=\"Download EPS File\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddMetaIpad;\n","import React, { Component } from \"react\";\nimport TextareaAutosize from 'react-autosize-textarea';\nimport uploadFile from \"./upload-file.png\";\n\nclass AddMetaDesktop extends Component {\n  constructor() {\n    super();\n    this.state = {\n      file: \"\",\n      text: \"\",\n      title: \"\",\n      description: \"\",\n      keyword: \"\"\n    };\n    this.showFile = this.showFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  showFile = function(event) {\n    const previewFile = document.getElementById(\"fileName\");\n    const file = event.target.files[0];\n    const filename = event.target.files[0].name;\n    const reader = new FileReader();\n    const scope = this;\n    reader.onload = function(e) {\n      const source = reader.result;\n      scope.setState({ text: source, file: filename });\n      previewFile.innerHTML = filename;\n\n      console.log(\"EPS file is ready >>>\");\n      console.log(\"File name: \" + filename);\n    };\n    reader.readAsText(file);\n  };\n\n  handleChange(event) {\n    return function(e) {\n      const state = {};\n      state[event] = e.target.value;\n      this.setState(state);\n    }.bind(this);\n  }\n\n  handleSubmit(event) {\n    const data = {\n      file: this.state.file,\n      text: this.state.text,\n      title: this.state.title,\n      description: this.state.description,\n      keyword: this.state.keyword\n    };\n\n    console.log(\n      \"Title: \" +\n        data.title +\n        \"\\nDescription: \" +\n        data.description +\n        \"\\nKeyword: \" +\n        data.keyword\n    );\n\n    event.preventDefault();\n\n    console.log(\n      data.keyword.split(/\\s*(?:,|$)\\s*\\s+/g).length,\n      new Map(Object.entries(data.keyword.split(/\\s*(?:,|$)\\s*\\s+/g)))\n    );\n\n    const lines = data.text.split(/\\n/);\n    console.log(lines.length);\n\n    const firstStr = data.text\n      .split(/\\n/, 14)\n      .map(function(line) {\n        return line + \"\\n\";\n      })\n      .join(\"\");\n\n    const keywordList = data.keyword\n      .split(/\\s*(?:,|$)\\s*\\s+/g)\n      .map(function(key) {\n        return \"\\n\\t\\t\\t<rdf:li>\" + key + \"</rdf:li>\";\n      })\n      .join(\"\");\n\n    const lasttStr = data.text\n      .split(/\\n/)\n      .slice(15)\n      .map(function(line) {\n        return line + \"\\n\";\n      })\n      .join(\"\");\n\n    const beginText = '\\n/currentdistillerparams where' +\n    '\\n{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse' +\n    '\\n{userdict /EPSHandler1_pdfmark /cleartomark load put' +\n    '\\nuserdict /EPSHandler1_ReadMetadata_pdfmark {flushfile cleartomark} bind put}' +\n    '\\n{ userdict /EPSHandler1_pdfmark /pdfmark load put' +\n    '\\nuserdict /EPSHandler1_ReadMetadata_pdfmark {/PUT pdfmark} bind put } ifelse' +\n    '\\n[/NamespacePush EPSHandler1_pdfmark' +\n    '\\n[/_objdef {eps_metadata_stream} /type /stream /OBJ EPSHandler1_pdfmark' +\n    '\\n[{eps_metadata_stream} 2 dict begin' +\n    '\\n/Type /Metadata def /Subtype /XML def currentdict end /PUT EPSHandler1_pdfmark' +\n    '\\n[{eps_metadata_stream}' +\n    '\\ncurrentfile 0 (% &&end EPS XMP packet marker&&)' +\n    '\\n/SubFileDecode filter EPSHandler1_ReadMetadata_pdfmark' +\n    '\\n<?xpacket begin=\"﻿\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?>' +\n    '\\n<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"XMP Core 5.5.0\">' +\n     '\\n<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">' +\n      '\\n<rdf:Description rdf:about=\"\"' +\n        '\\nxmlns:exif=\"http://ns.adobe.com/exif/1.0/\"' +\n        '\\nxmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\"' +\n        '\\nxmlns:photoshop=\"http://ns.adobe.com/photoshop/1.0/\"' +\n        '\\nxmlns:xmp=\"http://ns.adobe.com/xap/1.0/\"' +\n        '\\nxmlns:xmpMM=\"http://ns.adobe.com/xap/1.0/mm/\"' +\n        '\\nxmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\"' +\n       '\\ntiff:ResolutionUnit=\"2\"' +\n       '\\ntiff:XResolution=\"72.0\"' +\n       '\\ntiff:YResolution=\"72.0\"' +\n       '\\nphotoshop:ColorMode=\"3\"' +\n       '\\nphotoshop:ICCProfile=\"sRGB IEC61966-2.1\"';\n\n    const endText = '\\n</rdf:Description>' +\n      '\\n</rdf:RDF>' +\n     '\\n</x:xmpmeta>' +\n     '\\n\\n\\n<?xpacket end=\"w\"?>' +\n     '\\n% &&end EPS XMP packet marker&&' +\n     '\\n[/Document' +\n     '\\n1 dict begin /Metadata {eps_metadata_stream} def' +\n     '\\ncurrentdict end /BDC EPSHandler1_pdfmark' +\n     '\\n[/NamespacePop EPSHandler1_pdfmark';\n\n    const element = document.createElement(\"a\");\n    const metadata = new Blob(\n      [\n        firstStr +\n        beginText +\n          \"\\n\\t<dc:format>application/postscript</dc:format>\" +\n          \"\\n\\t<dc:title>\" +\n          \"\\n\\t\\t<rdf:Alt>\" +\n          '\\n\\t\\t\\t<rdf:li xml:lang=\"x-default\">' +\n          data.title +\n          \"</rdf:li>\" +\n          \"\\n\\t\\t</rdf:Alt>\" +\n          \"\\n\\t</dc:title>\" +\n          \"\\n\\t<dc:description>\" +\n          \"\\n\\t\\t<rdf:Alt>\" +\n          '\\n\\t\\t\\t<rdf:li xml:lang=\"x-default\">' +\n          data.description +\n          \"</rdf:li>\" +\n          \"\\n\\t\\t</rdf:Alt>\" +\n          \"\\n\\t</dc:description>\" +\n          \"\\n\\t<dc:subject>\" +\n          \"\\n\\t\\t<rdf:Bag>\" +\n          keywordList +\n          \"\\n\\t\\t</rdf:Bag>\" +\n          \"\\n\\t</dc:subject>\\n\\n\" +\n          endText +\n          \"\\n\\ngsave\\n\" +\n          lasttStr\n      ],\n      {\n        type: \"text/eps\"\n      }\n    );\n    element.href = URL.createObjectURL(metadata);\n    element.download = \"Magic-EPS-\" + data.file;\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  render() {\n    return (\n      <div className=\"mainContent\">\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n          <label className=\"uploadFile\">\n            <img className=\"uploadImg\" src={uploadFile} alt=\"Upload File\" />\n            <div id=\"fileName\">Choose an EPS File</div>\n            <input\n              required\n              type=\"file\"\n              accept=\".eps\"\n              onChange={this.showFile}\n            />\n            <div\n              name=\"text\"\n              id=\"metaFile\"\n              value={this.state.text}\n              onChange={this.handleChange(\"text\")}\n            />\n          </label>\n          <label>\n            <TextareaAutosize\n              required\n              maxLength={200}\n              name=\"title\"\n              id=\"metaTitle\"\n              placeholder={\"Title\"}\n              value={this.state.title}\n              onChange={this.handleChange(\"title\")}\n            />\n            <div id=\"charLenght\">{this.state.title.length}/200</div>\n          </label>\n          <label>\n            <TextareaAutosize\n              required\n              maxLength={200}\n              name=\"description\"\n              id=\"metaDescription\"\n              placeholder={\"Description\"}\n              value={this.state.description}\n              onChange={this.handleChange(\"description\")}\n            />\n            <div id=\"charLenght\">{this.state.description.length}/200</div>\n          </label>\n          <label>\n            <TextareaAutosize\n              required\n              name=\"keyword\"\n              id=\"metaKeyword\"\n              placeholder={\"Enter your keywords here...\"}\n              value={this.state.keyword}\n              onChange={this.handleChange(\"keyword\")}\n            />\n            <div id=\"charLenght\">{this.state.keyword ? this.state.keyword.split(/\\s*(?:,|$)\\s*\\s+/g).length : 0}/50</div>\n          </label>\n          <input type=\"submit\" id=\"addMeta\" value=\"Download EPS File\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddMetaDesktop;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Tabs from './Tabs';\nimport AddMetaIpad from \"./AddMetaIpad\";\nimport AddMetaDesktop from \"./AddMetaDesktop\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Tabs>\n         <div label=\"Desktop\">\n           <AddMetaDesktop />\n         </div>\n         <div label=\"iPad\">\n           <AddMetaIpad />\n         </div>\n       </Tabs>\n      <Footer />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/upload-file.1fec5a8d.png\";"],"sourceRoot":""}